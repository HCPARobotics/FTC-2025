package org.firstinspires.ftc.teamcode;

import com.qualcomm.hardware.bosch.BNO055IMU;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;

import org.firstinspires.ftc.robotcore.external.navigation.Orientation;
import org.firstinspires.ftc.robotcore.external.navigation.AxesReference;
import org.firstinspires.ftc.robotcore.external.navigation.AxesOrder;
import org.firstinspires.ftc.robotcore.external.navigation.AngleUnit;

@TeleOp(name = "External IMU Debug", group = "Examples")
public class ExternalIMUDebug extends LinearOpMode {

    private BNO055IMU imu;
    private Orientation angles;

    @Override
    public void runOpMode() {
        // Print all hardware names so we can confirm "imu" exists
        for (String name : hardwareMap.getAllNames()) {
            telemetry.addLine("Device: " + name);
        }
        telemetry.update();

        // IMU parameters
        BNO055IMU.Parameters parameters = new BNO055IMU.Parameters();
        parameters.angleUnit = BNO055IMU.AngleUnit.DEGREES;
        parameters.accelUnit = BNO055IMU.AccelUnit.METERS_PERSEC_PERSEC;
        parameters.loggingEnabled = true;

        // Try to grab "imu"
        imu = hardwareMap.get(BNO055IMU.class, "imu");

        telemetry.addLine("Initializing IMU...");
        telemetry.update();

        imu.initialize(parameters);

        // Wait for calibration
        while (!isStopRequested() && !imu.isGyroCalibrated()) {
            sleep(50);
            idle();
            telemetry.addData("Status", "Calibrating: %s", imu.getCalibrationStatus());
            telemetry.update();
        }

        telemetry.addData("Status", "IMU Ready");
        telemetry.update();

        waitForStart();

        while (opModeIsActive()) {
            angles = imu.getAngularOrientation(
                    AxesReference.INTRINSIC,
                    AxesOrder.ZYX,
                    AngleUnit.DEGREES
            );

            telemetry.addData("Heading (Z)", angles.firstAngle);
            telemetry.addData("Roll (X)", angles.secondAngle);
            telemetry.addData("Pitch (Y)", angles.thirdAngle);
            telemetry.addData("Calibration", imu.getCalibrationStatus().toString());
            telemetry.update();
        }
    }
}